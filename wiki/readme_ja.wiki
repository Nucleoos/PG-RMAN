#summary ユーザマニュアル

pg_rman -- PostgreSQL のバックアップとリカバリを管理します。

= 概要 =
{{{
pg_rman [ OPTIONS ] { init | backup | restore | show [ DATE | timeline ] | validate [ DATE ] | delete DATE }
}}}

pg_rman は以下の機能を持ちます。

  * コマンド1つで、テーブルスペースまで含めてデータベース全体のバックアップを取得します。
  * コマンド1つで、バックアップからの完全リカバリを行うことができます。
  * 増分バックアップや、バックアップの圧縮を行うため、バックアップファイルがコンパクトです。
  * バックアップは世代ごとに管理し、一覧できます。

DATE には、対象のバックアップのタイムスタンプ (開始日時) を ISO 形式 (YYYY-MM-DD HH:MI:SS) で指定します。DATE の末尾は省略可能で、その場合は指定した DATE の範囲に含まれるバックアップが対象となります。

{{{
$ pg_rman show 2009-12 # 2009年12月に取得したバックアップを表示
$ pg_rman validate     # 未検証のすべてのバックアップを検証
}}}

以下のコマンドをサポートします。オプション OPTIONS の詳細はオプションを参照してください。

  * init: バックアップカタログを初期化します。
  * backup: オンライン・バックアップを行います。
  * restore: リストアを行います。
  * show: 過去のバックアップ履歴を表示します。対象として timeline を指定すると、バックアップのタイムラインとその親タイムラインを表示します。
  * validate: バックアップを検証します。
  * delete: バックアップを削除します。

= 説明 =
pg_rman は、PostgreSQL のバックアップとリカバリを管理するプログラムです。バックアップ方式は、物理オンライン・バックアップです。バックアップ対象は、データベースクラスタ自体とアーカイブWAL、サーバログです。

== バックアップカタログの初期化 ==
pg_rman は、取得したバックアップファイルや管理情報を「バックアップカタログ」という領域に保存します。このため、まず最初にバックアップカタログを初期化する必要があります。

ここで、カタログを初期化する前に postgresql.conf にある archive_mode, archive_command を設定しておくことをお奨めします。これらのパラメータが設定されていると、pg_rman はその値を反映して設定ファイルの初期値を設定することができます。

{{{
$ pg_rman init -B <バックアップカタログパス>
}}}

== バックアップ ==
バックアップ対象は以下のいずれかで指定し、さらにサーバログを追加できます。

  * 全体バックアップ: データベースクラスタ全体をバックアップします。
  * 増分バックアップ: 最新の検証済みバックアップの開始以降に変更のあったファイル・ページのみをバックアップします。
  * アーカイブWAL: アーカイブWALのみのバックアップ

バックアップが正常に取得できたら、なるべく早いタイミングでバックアップを検証してください。未検証のバックアップは、リストアにも増分バックアップの取得基準としても使用できません。

== リストア ==
リストアを行う前に、PostgreSQL サーバを停止させてください。既存のデータベースクラスタが残っている場合には、リストア中に未アーカイブのWALがバックアップされ、その他のデータは削除されます。未アーカイブの WALのバックアップは次に全体バックアップを取得するまで保持されるので、リカバリ結果が望んだものでなかった場合は再度リストアからやり直すことが可能です。

リストアが完了すると、$PGDATA に recovery.conf が生成されます。必要に応じてこのファイルを編集してから PostgreSQL を起動して PITR を実行してください。

リカバリ結果が確認できたら、速やかに全体バックアップを取得してください。

"--recovery-target-timeline" を指定しなかった場合は、制御ファイル($PGDATA/global/pg_control) の最終チェックポイントタイムラインをターゲットとしてリストアします。pg_control が存在しない場合は、リストアのベースとなる全体バックアップのタイムラインをターゲットとしてリストアします。

= 使用例 =
バックアップカタログパスの環境変数 BACKUP_PATH と、デフォルトのバックアップ設定の ${BACKUP_PATH}/pg_rman.ini を予め設定しておくことで、少ない操作でバックアップやリストアを実施できます。各バックアップジョブの増分オプションのみをコマンドラインで与えると使い方になります。一般的な運用では、ほぼ全てのパラメータは設定ファイルで指定し、バックアップ対象 (backup_mode) のみをコマンドラインで与えることになるでしょう。

{{{
$ cat $BACKUP_PATH/pg_rman.ini
ARCLOG_PATH = /home/postgres/arclog
SRVLOG_PATH = /home/postgres/pgdata/pg_log

BACKUP_MODE = F
COMPRESS_DATA = YES
KEEP_ARCLOG_FILES = 10
KEEP_ARCLOG_DAYS = 10
KEEP_DATA_GENERATIONS = 3
KEEP_DATA_DAYS = 120
KEEP_SRVLOG_FILES = 10
KEEP_SRVLOG_DAYS = 10
}}}

バックアップを行います。この例では、データベース全体とサーバログのバックアップを取得します。その後、全ての未検証バックアップ（通常は、今取得したばかりのバックアップのみを含む）を検証しています。

{{{
$ pg_rman backup --backup-mode=full --with-serverlog
$ pg_rman validate
}}}

現在のデータベースを破棄し、バックアップからリストアします。

{{{
$ pg_ctl stop -m immediate
$ pg_rman restore
$ pg_ctl start 
}}}

show コマンドでバックアップカタログを一覧表示できます。

{{{
$ pg_rman show
============================================================================
Start                Time   Total    Data     WAL     Log  Backup   Status
============================================================================
2009-06-03 17:05:53  ----    ----    ----    ----    ----    ----   RUNNING
2009-06-01 17:05:53    3m    ----  9223KB    16MB    ----    17MB   OK
2009-05-31 17:05:53    3m  1242MB    ----    32MB    ----   242MB   OK
}}}

一覧に表示される列の意味は以下の通りです。

  * Start : バックアップの開始時刻
  * Time : バックアップにかかった時間
  * Total : バックアップのした際の、データベースのサイズ
  * Data : 読み込んだデータファイルサイズ
  * WAL : 読み込んだアーカイブWALサイズ
  * Log : 読み込んだサーバログサイズ
  * Backup: バックアップ全体のサイズ (≒書き出し量)
  * Status: バックアップの状態。以下の状態があります。
    * OK : バックアップが完了し、検証済みです。
    * DONE : バックアップは完了しましたが、まだ検証していません。
    * RUNNING : バックアップ中です。
    * DELETING : 削除処理中です。
    * DELETED : 削除済みです。
    * ERROR : バックアップ中にエラーが発生したため利用できません。
    * CORRUPT : バックアップが破損しているため利用できません。

delete コマンドでリカバリ対象日時を指定すると、そこまでのリカバリに不要なバックアップを削除できます。以下の例では、2009年9月11日の12:00時点にリカバリするのに不要なバックアップを削除しています。

{{{
$ pg_rman show
============================================================================
Start                Time   Total    Data     WAL     Log  Backup   Status
============================================================================
2009-09-11 20:00:01    0m    ----    ----      0B    ----      0B   OK
2009-09-11 15:00:53    0m    ----   8363B    16MB    ----  2346kB   OK
2009-09-11 10:00:48    0m    ----    ----      0B    ----      0B   OK
2009-09-11 05:00:06    0m    40MB    ----    16MB    ----  5277kB   OK
2009-09-11 00:00:02    0m    ----   8363B    16MB    ----   464kB   OK
2009-09-10 20:30:12    0m    ----    ----      0B    ----      0B   OK
2009-09-10 15:00:06    0m    ----    ----    16MB    ----    16kB   OK
2009-09-10 10:00:02    0m    ----   8363B    16MB    ----    16kB   OK
2009-09-10 05:00:08    0m    40MB    ----   150MB    ----    13MB   OK
$ pg_rman delete 2009-09-11 12:00:00
$ pg_rman show
============================================================================
Start                Time   Total    Data     WAL     Log  Backup   Status
============================================================================
2009-09-11 20:00:01    0m    ----    ----      0B    ----      0B   OK
2009-09-11 15:00:53    0m    ----   8363B    16MB    ----  2346kB   OK
2009-09-11 10:00:48    0m    ----    ----      0B    ----      0B   OK
2009-09-11 05:00:06    0m    40MB    ----    16MB    ----  5277kB   OK
}}}

= オプション =
pg_rman では、下記のコマンドライン引数を指定できます。一部のオプションは環境変数でも指定できます。詳細はパラメータの指定方法を参照してください。
共通オプション

データの場所に関するパスは、絶対パスで指定する必要があります。

-D PATH / --pgdata=PATH
    データベースクラスタの絶対パスを指定します。バックアップ時とリストア時には必須項目です。

-A PATH / --arclog-path=PATH
    WALのアーカイブ先ディレクトリの絶対パスを指定します。バックアップ時とリストア時には必須項目です。

-S PATH / --srvlog-path=PATH
    サーバログが存在するディレクトリの絶対パスを指定します。サーバログのバックアップ時とリストア時には必須項目です。

-B PATH / --backup-path=PATH
    バックアップカタログの絶対パスを指定します。必須項目です。

-c / --check
    このオプションを指定すると、バックアップやリストアの実際の処理は行いません。--verbose オプションと組み合わせて処理内容を確認するのに使用します。

== バックアップ・オプション ==

-b { full | incremental | archive } / --backup-mode={ full | incremental | archive }
    バックアップ対象を指定します。全体バックアップ (full), 増分バックアップ (incremental), アーカイブWALバックアップ (archive) のいずれかを指定できます。指定した文字列の前方一致で判定されるため、-b f は full と同じ動作になります。

        * full : 全体バックアップとアーカイブWALバックアップを取得
        * incremental : 増分バックアップとアーカイブWALバックアップを取得
        * archive : データベースはバックアップせず、WALバックアップのみを取得

-s / --with-serverlog
    サーバログをバックアップします。省略時は取得しません。

-Z
--compress-data
    zlibを用いてバックアップファイルを圧縮します。省略時は圧縮なしです。
-C / --smooth-checkpoint
    バックアップ直前に平滑化チェックポイントを行います。pg_start_backup()の第2引数に相当します。

--keep-data-generations / --keep-data-days
    バックアップしたデータの保持期限を指定します。 --keep-data-generations では保存する世代数を、--keep-data-days では最低保存日数を指定し、どちらの閾値も超えた全体バックアップだけが削除されます。

--keep-arclog-files / --keep-arclog-days
    バックアップしたアーカイブWALの保持期限を指定します。 --keep-arclog-files では保存ファイル数を、--keep-arclog-days では保存日数を指定し、どちらの閾値も超えたファイルだけが削除されます。

--keep-srvlog-files / --keep-srvlog-days
    バックアップしたサーバログの保持期限を指定します。 --keep-srvlog-files では保存ファイル数を、--keep-srvlog-days では保存日数を指定し、どちらの閾値も超えたファイルだけが削除されます。

== リストア・オプション ==
これらの変数は recovery.conf のパラメータに対応します。詳細は「継続的アーカイブとポイントインタイムリカバリ（PITR）#リカバリの設定」を参照してください。

--recovery-target-timeline TIMELINE
    どの時系列でリカバリを行うかを指定します。省略時は現在のタイムライン($PGDATA/global/pg_control から取得)でリカバリを行います。

--recovery-target-time TIMESTAMP
    リカバリ処理をどこまで行うかを示す時刻を指定します。省略時は可能な限り最新の状態までリカバリを行います。

--recovery-target-xid XID
    リカバリ処理をどこまで進めるかを示すトランザクションIDを指定します。省略時は可能な限り最新の状態までリカバリを行います。

--recovery-target-inclusive
    指定したリカバリ対象の直後で停止する (true) か、リカバリ対象の直前で停止する (false) かを指定します。デフォルトは true です。

== カタログ・オプション ==
-a / --show-all
    削除済みのバックアップも一覧に表示します。

== 接続オプション ==
PostgreSQLに接続するためのパラメータです。

-d DBNAME / --dbname=DBNAME
    pg_start_backup() と pg_stop_backup() の呼び出しを行うための接続先データベースです。管理コマンドを発行するだけなので、指定するデータベースはどれでも構いません。

-h HOSTNAME / --host=HOSTNAME
    サーバが稼働しているマシンのホスト名を指定します。ホスト名がスラッシュから始まる場合、Unixドメインソケット用のディレクトリとして使用されます。

-p PORT / --port=PORT
    サーバが接続を監視するTCPポートもしくはUnixドメインソケットファイルの拡張子を指定します。

-U USERNAME / --username=USERNAME
    接続するユーザ名を指定します。

-w / --no-password
    パスワードの入力を促しません。サーバがパスワード認証を必要とし、かつ、.pgpassファイルなどの他の方法が利用できない場合、接続試行は失敗します。バッチジョブやパスワードを入力するユーザが存在しない場合にこのオプションは有用かもしれません。

-W / --password
    データベースに接続する前に、pg_rman は強制的にパスワード入力を促します。サーバがパスワード認証を要求する場合 pg_rman は自動的にパスワード入力を促しますので、これが重要になることはありません。しかし、pg_rman は、サーバにパスワードが必要かどうかを判断するための接続試行を無駄に行います。こうした余計な接続試行を防ぐために -W の入力が有意となる場合もあります。

== 一般オプション ==

--help
    ヘルプを表示し、終了します

-V / --version
    バージョン情報を出力し、終了します

-! / --debug
    処理中に詳細なデバッグ情報を表示します。

= パラメータの指定方法 =
pg_rman では、一部の設定項目は、環境変数や設定ファイルでも指定できます。コマンドラインオプション、環境変数、設定ファイル項目の対応関係は以下の表の通りです。

|| *短形式* || *長形式* || *環境変数* || *設定ファイル* || *意味* ||
|| -h || --host || PGHOST || || データベースホスト名 ||
|| -p || --port || PGPORT || || データベースポート番号 ||
|| -d || --dbname || PGDATABASE || || データベース名 ||
|| -U || --username || PGUSER || || データベースユーザ名 ||
||    || || PGPASSWORD || || データベースパスワード ||
|| -w || --password || || || データベースパスワード入力の強制 ||
|| -W || --no-password || || || データベースパスワード入力プロンプトを出さない ||
|| -D || --pgdata || PGDATA || 指定可 || データベースクラスタのパス ||
|| -B || --backup-path || BACKUP_PATH || 指定可 || バックアップカタログのパス ||
|| -A || --arclog-path || ARCLOG_PATH || 指定可 || WALアーカイブ先のパス ||
|| -S || --srvlog-path || SRVLOG_PATH || 指定可 || サーバログディレクトリのパス ||
|| -b || --backup-mode || BACKUP_MODE || 指定可 || バックアップ対象 ||
|| -s || --with-serverlog || WITH_SERVERLOG || 指定可 || サーバログを共にバックアップ ||
|| -Z || --compress-data || COMPRESS_DATA || 指定可 || データ圧縮あり ||
|| -C || --smooth-checkpoint || SMOOTH_CHECKPOINT || 指定可 || 平滑化チェックポイント ||
||    || --keep-data-generations || KEEP_DATA_GENERATIONS || 指定可 || データベースバックアップの保存世代数 ||
||    || --keep-data-days || KEEP_DATA_DAYS || 指定可 || データベースバックアップの保存日数 ||
||    || --keep-srvlog-files || KEEP_SRVLOG_FILES || 指定可 || サーバログの保存ファイル数 ||
||    || --keep-srvlog-days || KEEP_SRVLOG_DAYS || 指定可 || サーバログの保存日数 ||
||    || --keep-arclog-files || KEEP_ARCLOG_FILES || 指定可 || アーカイブWALの保存ファイル数 ||
||    || --keep-arclog-days || KEEP_ARCLOG_DAYS || 指定可 || アーカイブWALの保存日数 ||
||    || --recovery-target-timeline || RECOVERY_TARGET_TIMELINE || 指定可 || リカバリ到達点のタイムラインID ||
||    || --recovery-target-xid || RECOVERY_TARGET_XID || 指定可 || リカバリ到達点のトランザクションID ||
||    || --recovery-target-time || RECOVERY_TARGET_TIME || 指定可 || リカバリ到達点のタイムスタンプ ||
||    || --recovery-target-inclusive || RECOVERY_TARGET_INCLUSIVE || 指定可 || リカバリ到達点自体をリカバリするか ||

  * 設定ファイルの項目名は、長形式または環境変数と同じ名前で指定します。
  * パスワードは環境変数でのみ指定可能です。

また、このユーティリティは、他のほとんどの PostgreSQL ユーティリティと同様、 libpq でサポートされる環境変数を使用します。詳細については、環境変数の項目を参照してください。

= 使用上の注意と制約 =

pg_rman を使用する際には、以下の使用上の注意と制約があります。

  * データベースクラスタとバックアップ先の両方のファイルシステムへアクセスします。データベース・サーバがバックアップ先のファイルシステムをネットワーク・マウントし、pg_rman はデータベース・サーバ上で動作させることを推奨します。
  * pg_rman とサーバの "メジャーバージョン" を一致させる必要があります。異なるバージョンの組合せではバックアップできません。
  * pg_rman とサーバの "ブロックサイズ" を一致させる必要があります。同一のバージョンであっても、BLCKSZ, XLOG_BLCKSZ が異なる組合せではバックアップできません。

= 詳細 =
== Recovery to Point-in-Time ==
pg_rmanでは、タイムラインやトランザクションID、タイムスタンプでリカバリ到達点を指定することにより、任意の時点の状態にデータベースをリカバリすることができます。正確なリカバリ到達点を決定するには、WALの内容をxlogdumpなどのツールでトランザクション内容を確認してください。タイムラインやリカバリ到達点の詳細については継続的アーカイブとポイントインタイムリカバリ (PITR)を参照してください。
設定ファイル

設定ファイルには「設定項目=設定値」の書式でパラメータを指定します。指定可能な項目はParametersを参照してください。設定値に空白を含む場合はシングルクォートで囲んでください。設定ファイル内の "#" 以降はコメントとして無視されます。また、設定値以外の空白及びタブは無視されます。

== プログラム終了コード ==
pg_rman ではエラーの種別ごとに異なるプログラム終了コードを返します。

|| *コード* || *名前* || *意味* ||
||  0 || SUCCESS || 正常に終了しました。 ||
||  1 || HELP || ヘルプを表示し、終了しました。 ||
||  2 || ERROR || 未分類のエラーです。 ||
||  3 || FATAL || エラーが再帰的に発生し強制終了しました。 ||
||  4 || PANIC || 未知の致命的エラーです。 ||
|| 10 || ERROR_SYSTEM || I/O またはシステムエラーです。 ||
|| 11 || ERROR_NOMEM || メモリ不足です。 ||
|| 12 || ERROR_ARGS || 入力パラメータが不正です。 ||
|| 13 || ERROR_INTERRUPTED || シグナルにより中断されました。(Ctrl+C 等) ||
|| 14 || ERROR_PG_COMMAND || PostgreSQL サーバへ発行したSQLが失敗しました。 ||
|| 15 || ERROR_PG_CONNECT || PostgreSQL サーバに接続できません。 ||
|| 20 || ERROR_ARCHIVE_FAILED || WAL アーカイブに失敗しました。 ||
|| 21 || ERROR_NO_BACKUP || バックアップが見つかりません。 ||
|| 22 || ERROR_CORRUPTED || バックアップが破損しています。 ||
|| 23 || ERROR_ALREADY_RUNNING || 他の pg_rman が実行中です。 ||
|| 24 || ERROR_PG_INCOMPATIBLE || PostgreSQL サーバとの互換性がありません。 ||
|| 25 || ERROR_PG_RUNNING || PostgreSQL サーバが起動中のためリストアできません。 ||
|| 26 || ERROR_PID_BROKEN || postmaster.pid ファイルが破損しています。 ||

= インストール方法 =
pg_rman のインストールは、標準のcontribモジュールと同様です。

== ビルド ==
pgxs を使ってビルドできます。
{{{
$ cd pg_rman
$ make USE_PGXS=1
$ make USE_PGXS=1 install
}}}
データベースへの登録は不要です。

== 動作環境 ==
  * PostgreSQL 8.4～8.1
  * OS: RHEL 5.3